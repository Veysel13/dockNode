import dotenv from "dotenv";
import { FileCache } from "./providers/FileCache";
import { RedisCache } from "./providers/RedisCache";
import { ICache } from "./providers/ICache";
import { MemCache } from "./providers/MemCache";
import { MemoryCache } from "./providers/MemoryCache";

dotenv.config();

const CACHE_DRIVER = process.env.CACHE_DRIVER || "file";

class CacheManager {
  private cacheProvider: ICache;

  constructor() {
    if (CACHE_DRIVER === "redis") {
      this.cacheProvider = new RedisCache();
    }else if (CACHE_DRIVER === "mem") {
      this.cacheProvider = new MemCache();
    }else if (CACHE_DRIVER === "memory") {
      this.cacheProvider = new MemoryCache();
    }else {
      this.cacheProvider = new FileCache();
    }
  }

  getProvider(): ICache {
    return this.cacheProvider;
  }
}

export const cache = new CacheManager().getProvider();


/*
Ã–zellik	File Cache ğŸ—‚	Redis ğŸ”´	Memcached ğŸŸ¢	Memory Cache âš¡

AÃ§Ä±klama	

Dosya tabanlÄ± cache, disk Ã¼zerine kayÄ±t eder.	
RAM Ã¼zerinde Ã§alÄ±ÅŸan, hÄ±zlÄ± ve kalÄ±cÄ± cache sistemi.	
RAM Ã¼zerinde Ã§alÄ±ÅŸan, yÃ¼ksek hÄ±zlÄ± geÃ§ici cache.	
Uygulama belleÄŸinde Ã§alÄ±ÅŸan cache.

HÄ±z	

YavaÅŸ (Disk I/O)	
Ã‡ok hÄ±zlÄ± (RAM)	
Ã‡ok hÄ±zlÄ± (RAM)	
En hÄ±zlÄ± (RAM, ancak uygulama ile sÄ±nÄ±rlÄ±)

Veri KalÄ±cÄ±lÄ±ÄŸÄ±	

KalÄ±cÄ± (Diskte saklanÄ±r)	
KalÄ±cÄ± (Persisted Mode ile)	
GeÃ§ici (Sunucu kapanÄ±nca silinir)	
GeÃ§ici (Uygulama kapanÄ±nca silinir)

PaylaÅŸÄ±mlÄ± KullanÄ±m	

HayÄ±r (Lokal)	
Evet (Merkezi cache)	
Evet (Merkezi cache)	
HayÄ±r (Sadece uygulama iÃ§i)


TTL (SÃ¼re AÅŸÄ±mÄ± DesteÄŸi)	

Manuel olarak programlanmalÄ±	
Evet	
Evet	
Evet


KullanÄ±m AlanÄ±	
KÃ¼Ã§Ã¼k Ã¶lÃ§ekli projeler, lokal cache	
BÃ¼yÃ¼k projeler, daÄŸÄ±tÄ±k sistemler, oturum yÃ¶netimi	
KÄ±sa sÃ¼reli hÄ±zlÄ± cache ihtiyacÄ±, load balancing	
KÃ¼Ã§Ã¼k Ã¶lÃ§ekli, tek sunuculu uygulamalar


âœ… File Cache: KÃ¼Ã§Ã¼k Ã¶lÃ§ekli projelerde disk tabanlÄ± veri saklama iÃ§in.
âœ… Redis: BÃ¼yÃ¼k Ã¶lÃ§ekli projelerde oturum yÃ¶netimi, kuyruk sistemleri, yÃ¼ksek hÄ±zlÄ± veri eriÅŸimi iÃ§in.
âœ… Memcached: KÄ±sa sÃ¼reli bÃ¼yÃ¼k veri cache iÅŸlemleri iÃ§in (Ã¶rneÄŸin API yanÄ±tlarÄ±, token saklama).
âœ… Memory Cache: Tek sunuculu projelerde en hÄ±zlÄ± cache Ã§Ã¶zÃ¼mÃ¼ olarak (geÃ§ici veri saklama).

*/
